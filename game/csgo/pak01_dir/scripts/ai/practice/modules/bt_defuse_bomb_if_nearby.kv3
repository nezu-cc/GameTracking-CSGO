<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	type = "decorator_sensor"
	shape =
	{
		type = "sensor_shape_sphere"
		radius = 3000
	}
	entity_type_filter = "CLASSNAME"
	orphan_only = 1
	output = "PlantedBomb"
	class_name = "planted_c4"
	priority = 1
	child = 
	{
		type = "decorator_ranker_dist"
		input = "PlantedBomb"
		child =
		{
			type = "decorator_picker_max_score"
			input = "PlantedBomb"
			child =
			{
				type = "condition_is_empty"
				input = "PlantedBomb"
				negated = 1
				child =
				{
					type = "decorator_try_lock"
					domain = "'DefuseBombIfNearby'"
					child =
					{
						type = "sequencer"
                        children =
                        [
                            {
                                type = "action_move_to"
                                destination = "PlantedBomb"
                                movement_type = "BT_ACTION_MOVETO_RUN"
                                route_type = "BT_ACTION_MOVETO_FASTEST_ROUTE"
                                hiding_spot = "HidingSpot"
                                threat = "NearestThreatMemory"
                                nearest_area_distance_threshold = 20
                                arrival_epsilon = 35
                            },
                            {
                                type = "action_look_at"
                                input_location = "PlantedBomb"
                            },
                            {
                                type = "action_wait"
                                wait_time_min = 0.25
                                wait_time_max = 0.25
                            },
                            {
                                type = "decorator_repeat"
                                child =
                                {
                                    type = "action_use"
                                }
                            }
                        ]
					}
				}
			}
		}
	}
}
